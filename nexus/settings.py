"""
Django settings for nexus project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6xjgv18!nz)^n%_*#f!#^t*^o)v6nuq*nwpw4%z52@82aco4v$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False") == "True"


# ALLOWED_HOSTS = []
#ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "localhost").split(",")
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "localhost,127.0.0.1,nexus-gtq3.onrender.com").split(",")


# Trust HTTPS if in production (recommended for Render)
CSRF_TRUSTED_ORIGINS = [f"https://{host}" for host in ALLOWED_HOSTS]

# Security for cookies and redirects
SECURE_SSL_REDIRECT = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'events',
    'api',
    'rest_framework',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'django_extensions',
    'channels',
    'chat',
    'announcements',
   
]
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_RENDERER_CLASSES": [  # Only use JSON, disable HTML filtering form
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],

}

SPECTACULAR_SETTINGS = {
    "TITLE": "Nexus API",
    "DESCRIPTION": "REST API for Nexus - Volunteer & Organisation Platform",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "COMPONENT_SPLIT_REQUEST": True,
    "SCHEMA_PATH_PREFIX_TRIM": "/api",
        "TAGS": [
        {"name": "Users", "description": "User accounts and roles"},
        {"name": "Events", "description": "Volunteer event listings"},
        {"name": "Announcements", "description": "Organisation announcements and feedback"},
        {"name": "Chat", "description": "Event chatrooms and messages"},
    ]
}

AUTH_USER_MODEL = 'accounts.CustomUser'
LOGIN_URL = "accounts:login"


LOGIN_REDIRECT_URL = '/login/redirect/'  # Redirect after successful login
# LOGOUT_REDIRECT_URL = 'home'  # Redirect after logout

LOGOUT_REDIRECT_URL = 'accounts:login'  # Redirects users to login page after logout

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'nexus.urls'
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# EMAIL 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' 
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # this is sending the emails on console


EMAIL_HOST = 'smtp.sendgrid.net'

# EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
#EMAIL_HOST_USER = 'nithiyah02@gmail.com'  # my email address
#EMAIL_HOST_PASSWORD = 'flle qzou qksy ohfg'  # my gmail password
#DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = os.environ.get("SENDGRID_API_KEY")
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")




TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'nexus.wsgi.application'
ASGI_APPLICATION = "nexus.asgi.application"

# Redis setup for WebSocket communication
CHANNEL_LAYERS = {
    "default": {
    #     "BACKEND": "channels.layers.InMemoryChannelLayer", 
        
    #       # Use Redis in production
    # 
    "BACKEND": "channels_redis.core.RedisChannelLayer",
    "CONFIG": {
    "hosts": [os.environ.get("REDIS_URL", "redis://127.0.0.1:6379")],
    },

    }
    }



# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
import dj_database_url

DATABASES = {
    'default': dj_database_url.config(default=os.environ.get("DATABASE_URL"))
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'  # Ensure this is correct
USE_TZ = False  # Keep this True to use timezone-aware timestamps


USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Define the directory where static files are collected
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # Ensure this directory exists
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
 